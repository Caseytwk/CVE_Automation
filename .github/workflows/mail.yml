name: CVE Alert via Teams

on:
  push:
    branches:
      - main
    paths:
      - 'output/results.json'
  schedule:
    - cron: '0 17 * * *'  # 1 AM MYT (UTC+8)
  workflow_dispatch:

jobs:
  alert:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python & JQ
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install jq

      - name: Compare with previous commit
        id: compare
        run: |
          mkdir -p temp

          # Handle first run where no previous commit may exist
          if git rev-parse HEAD^ &>/dev/null && git show HEAD^:output/results.json > temp/old_results.json 2>/dev/null; then
            echo "âœ… Found previous results"
          else
            echo '{"results":[]}' > temp/old_results.json
            echo "ðŸŸ¡ No previous results, assuming empty"
          fi

          # Extract IDs
          jq -r '.results[].id' output/results.json > temp/new_ids.txt
          jq -r '.results[].id' temp/old_results.json > temp/old_ids.txt

          # Find new CVE IDs only
          comm -23 <(sort temp/new_ids.txt) <(sort temp/old_ids.txt) > temp/new_only_ids.txt

          if [ -s temp/new_only_ids.txt ]; then
            echo "trigger_alert=true" >> $GITHUB_OUTPUT
          else
            echo "trigger_alert=false" >> $GITHUB_OUTPUT
          fi

      - name: Format and send Teams alert
        if: steps.compare.outputs.trigger_alert == 'true'
        run: |
          MESSAGE="ðŸš¨ *New CVEs detected!*<br><br>"

          for id in $(cat temp/new_only_ids.txt); do
            entry=$(jq -r --arg id "$id" '.results[] | select(.id == $id)' output/results.json)
            title=$(echo "$entry" | jq -r '.title // .description')
            severity=$(echo "$entry" | jq -r '.severity // "UNKNOWN"')
            ref=$(echo "$entry" | jq -r '.reference // empty')
            [ -z "$ref" ] && ref="https://nvd.nist.gov/vuln/detail/$id"

            MESSAGE+="<b>$id</b> ($severity)<br>$title<br><a href=\"$ref\">$ref</a><br><br>"
          done

          MESSAGE+="ðŸ‘‰ <a href='https://caseytwk.github.io/CVE_Automation/'>View full dashboard</a>"

          TEXT=$(echo "$MESSAGE" | jq -Rs .)
          curl -H "Content-Type: application/json" \
               -d "{\"text\": $TEXT}" \
               ${{ secrets.TEAMS_WEBHOOK_URL }}
