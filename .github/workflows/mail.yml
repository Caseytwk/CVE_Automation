name: CVE Monitor with Teams Alerts

on:
  schedule:
    - cron: '0 17 * * *'  # 1 AM MYT (UTC+8)
  workflow_dispatch:

jobs:

  scan:
    runs-on: ubuntu-latest
    outputs:
      new_cve: ${{ steps.compare.outputs.new_cve_found }}
      alert_body: ${{ steps.format.outputs.alert_body }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: python -m pip install requests jq

      - name: Run CVE scan script
        run: python check_cves.py

      - name: Compare new CVEs with previous results
        id: compare
        run: |
          git show HEAD^:output/results.json > old_results.json || echo '{"results":[]}' > old_results.json
          NEW_IDS=$(jq -r '.results[].id' output/results.json)
          OLD_IDS=$(jq -r '.results[].id' old_results.json)

          NEW_CVES=""
          for id in $NEW_IDS; do
            if ! echo "$OLD_IDS" | grep -qx "$id"; then
              echo "Found new CVE: $id"
              NEW_CVES="$NEW_CVES $id"
            fi
          done

          if [ -n "$NEW_CVES" ]; then
            echo "new_cve_found=true" >> $GITHUB_OUTPUT
            echo "$NEW_CVES" > new_ids.txt
          else
            echo "new_cve_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Format Teams alert message
        if: steps.compare.outputs.new_cve_found == 'true'
        id: format
        run: |
          MESSAGE="ðŸš¨ *New CVEs detected!*\n\n"
          for id in $(cat new_ids.txt); do
            entry=$(jq -r --arg id "$id" '.results[] | select(.id==$id)' output/results.json)
            title=$(echo "$entry" | jq -r '.title // .description')
            severity=$(echo "$entry" | jq -r '.severity')
            ref=$(echo "$entry" | jq -r '.reference // "N/A"')
            MESSAGE+="*[$id]* ($severity)<br>$title<br><a href=\"$ref\">$ref</a><br><br>"
          done
          MESSAGE+="ðŸ‘‰ <a href=\"https://caseytwk.github.io/CVE_Automation/\">View full dashboard</a>"
      
          # Escape for JSON and output properly
          ESCAPED=$(echo "$MESSAGE" | jq -Rs .)
          echo "alert_body=$ESCAPED" >> $GITHUB_OUTPUT


  alert:
    needs: scan
    runs-on: ubuntu-latest
    if: needs.scan.outputs.new_cve == 'true'

    steps:
     - name: Send Microsoft Teams alert
       run: |
          TEXT=$(cat alert_body.txt)
          curl -H "Content-Type: application/json" \
               -d "{\"text\": \"$TEXT\"}" \
               ${{ secrets.TEAMS_WEBHOOK_URL }}
